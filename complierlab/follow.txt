G' : [+, ;, ), <, <=, ==, !=, >, >=, and, or, then, do, ,]
A : [;]
E' : [;, ), <, <=, ==, !=, >, >=, and, or, then, do, ,]
B : [then, do, ;, and, or, )]
C : [id]
D : [record, proc, if, while, for, call, return, id, int, real, char, $, }]
E : [;, ), <, <=, ==, !=, >, >=, and, or, then, do, ,]
Elist' : [)]
F : [=, ,, ;, *, +, ), <, <=, ==, !=, >, >=, and, or, then, do]
G : [+, ;, ), <, <=, ==, !=, >, >=, and, or, then, do, ,]
H : [or, then, do, ;, and, )]
I : [and, or, then, do, ;, )]
L : [=]
relop : [(, id, digit, ch]
M : [)]
P : [$, }]
S : [record, proc, if, while, for, call, return, id, int, real, char, $, else, }]
T : [id]
V : [)]
X : [[, id]
L' : [=]
Elist : [)]
H' : [or, then, do, ;, and, )]
Program : [$]
B' : [then, do, ;, and, or, )]
M' : [)]
