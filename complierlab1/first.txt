<= : [<=]
E' : [+, empty]
num : [num]
do : [do]
while : [while]
else : [else]
record : [record]
id : [id]
Elist : [(, id, digit, ch]
if : [if]
digit : [digit]
-- : [--]
== : [==]
Program : [empty, record, proc, if, while, for, call, return, id, int, real, char]
B' : [or, empty]
( : [(]
) : [)]
* : [*]
real : [real]
then : [then]
+ : [+]
, : [,]
true : [true]
; : [;]
< : [<]
!= : [!=]
= : [=]
> : [>]
>= : [>=]
G' : [*, empty]
A : [=, empty, ,]
B : [not, (, true, false, id, digit, ch]
C : [[, empty]
D : [record, proc, int, real, char]
E : [(, id, digit, ch]
Elist' : [,, empty]
F : [(, id, digit, ch]
G : [(, id, digit, ch]
for : [for]
H : [not, (, true, false, id, digit, ch]
I : [not, (, true, false, id, digit, ch]
L : [id]
relop : [<, <=, ==, !=, >, >=]
M : [int, real, char, empty]
P : [empty, record, proc, if, while, for, call, return, id, int, real, char]
not : [not]
S : [if, while, for, call, return, id]
T : [int, real, char]
and : [and]
V : [++, --]
X : [int, real, char]
[ : [[]
L' : [[, empty]
] : []]
H' : [and, empty]
++ : [++]
proc : [proc]
or : [or]
ch : [ch]
false : [false]
int : [int]
call : [call]
char : [char]
M' : [,, empty]
{ : [{]
} : [}]
return : [return]
