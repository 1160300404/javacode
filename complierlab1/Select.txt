		id		;		record		{		}		=		,		int		real		char		[		num		]		if		then		else		while		do		+		*		(		)		digit		ch		for		++		--		or		and		not		true		false		<		<=		==		!=		>		>=		proc		call		return
Program    Program->[P]	null   	Program->[P]	null   	null   	null   	null   	Program->[P]	Program->[P]	Program->[P]	null   	null   	null   	Program->[P]	null   	null   	Program->[P]	null   	null   	null   	null   	null   	null   	null   	Program->[P]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	Program->[P]	Program->[P]	Program->[P]	
P    P->[S, P]	null   	P->[D, P]	null   	P->[empty]	null   	null   	P->[D, P]	P->[D, P]	P->[D, P]	null   	null   	null   	P->[S, P]	null   	null   	P->[S, P]	null   	null   	null   	null   	null   	null   	null   	P->[S, P]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	P->[D, P]	P->[S, P]	P->[S, P]	
D    null   	null   	D->[record, id, {, P, }]	null   	null   	null   	null   	D->[T, id, A, ;]	D->[T, id, A, ;]	D->[T, id, A, ;]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	D->[proc, X, id, (, M, ), {, P, }]	null   	null   	
A    null   	A->[empty]	null   	null   	null   	A->[=, F, A]	A->[,, id, A]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
T    null   	null   	null   	null   	null   	null   	null   	T->[X, C]	T->[X, C]	T->[X, C]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
X    null   	null   	null   	null   	null   	null   	null   	X->[int]	X->[real]	X->[char]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
C    C->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	C->[[, num, ], C]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
S    S->[L, =, E, ;]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	S->[if, B, then, S, else, S]	null   	null   	S->[while, B, do, S]	null   	null   	null   	null   	null   	null   	null   	S->[for, (, id, =, E, ;, B, ;, id, V, ), {, S, }]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	S->[call, id, (, Elist, ), ;]	S->[return, E, ;]	
E    E->[G, E']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	E->[G, E']	null   	E->[G, E']	E->[G, E']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
E'    null   	E'->[empty]	null   	null   	null   	null   	E'->[empty]	null   	null   	null   	null   	null   	null   	null   	E'->[empty]	null   	null   	E'->[empty]	E'->[+, G, E']	null   	null   	E'->[empty]	null   	null   	null   	null   	null   	E'->[empty]	E'->[empty]	null   	null   	null   	E'->[empty]	E'->[empty]	E'->[empty]	E'->[empty]	E'->[empty]	E'->[empty]	null   	null   	null   	
G    G->[F, G']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	G->[F, G']	null   	G->[F, G']	G->[F, G']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
G'    null   	G'->[empty]	null   	null   	null   	null   	G'->[empty]	null   	null   	null   	null   	null   	null   	null   	G'->[empty]	null   	null   	G'->[empty]	G'->[empty]	G'->[*, F, G']	null   	G'->[empty]	null   	null   	null   	null   	null   	G'->[empty]	G'->[empty]	null   	null   	null   	G'->[empty]	G'->[empty]	G'->[empty]	G'->[empty]	G'->[empty]	G'->[empty]	null   	null   	null   	
F    F->[id]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	F->[(, E, )]	null   	F->[digit]	F->[ch]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
L    L->[id, L']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
L'    null   	null   	null   	null   	null   	L'->[empty]	null   	null   	null   	null   	L'->[[, num, ], L']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
V    null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	V->[++]	V->[--]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
B    B->[H, B']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	B->[H, B']	null   	B->[H, B']	B->[H, B']	null   	null   	null   	null   	null   	B->[H, B']	B->[H, B']	B->[H, B']	null   	null   	null   	null   	null   	null   	null   	null   	null   	
B'    null   	B'->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	B'->[empty]	null   	null   	B'->[empty]	null   	null   	null   	B'->[empty]	null   	null   	null   	null   	null   	B'->[empty]	B'->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
H    H->[I, H']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	H->[I, H']	null   	H->[I, H']	H->[I, H']	null   	null   	null   	null   	null   	H->[I, H']	H->[I, H']	H->[I, H']	null   	null   	null   	null   	null   	null   	null   	null   	null   	
H'    null   	H'->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	H'->[empty]	null   	null   	H'->[empty]	null   	null   	null   	H'->[empty]	null   	null   	null   	null   	null   	H'->[empty]	H'->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
I    I->[E, relop, E]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	I->[(, B, )]	null   	I->[E, relop, E]	I->[E, relop, E]	null   	null   	null   	null   	null   	I->[not, B]	I->[true]	I->[false]	null   	null   	null   	null   	null   	null   	null   	null   	null   	
relop    null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	relop->[<]	relop->[<=]	relop->[==]	relop->[!=]	relop->[>]	relop->[>=]	null   	null   	null   	
M    null   	null   	null   	null   	null   	null   	null   	M->[X, id, M']	M->[X, id, M']	M->[X, id, M']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	M->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
M'    null   	null   	null   	null   	null   	null   	M'->[,, X, id, M']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	M'->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
Elist    Elist->[E, Elist']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	Elist->[E, Elist']	null   	Elist->[E, Elist']	Elist->[E, Elist']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
Elist'    null   	null   	null   	null   	null   	null   	Elist'->[,, E, Elist']	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	Elist'->[empty]	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	null   	
